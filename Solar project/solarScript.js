//Innput variables
var consumption = 0;
var solarGeneration = 0;
var batCapacity = 0;


//Calculated values
var excessEnergy = 0;
var energyNeeded = 0;
var totEngNeeded = 0;
var dayNightPercentage = 0;

//Arrays
var engEfficiency = [0,0,0,0,0,0,0.2,0.4,0.6,0.8,0.8,0.8,0.8,0.6,0.4,0.2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.2,0.4,0.6,0.8,0.8,0.8,0.8,0.6,0.4,0.2,0,0,0,0,0,0,0,0];
var consumptionArray = [];
var batStateArray = [];
var energyProducedArray = [];
var electricityArray = [];
var xAxisArr = ['01:00','02:00','03:00','04:00','05:00','06:00', '07:00', '08:00', '09:00', '10:00', '11:00', '12:00', '13:00', '14:00', '15:00', '16:00', '17:00', '18:00', '19:00', '20:00', '21:00', '22:00', '23:00', '01:00','02:00','03:00','04:00','05:00','06:00', '07:00', '08:00', '09:00', '10:00', '11:00', '12:00', '13:00', '14:00', '15:00', '16:00', '17:00', '18:00', '19:00', '20:00', '21:00', '22:00', '23:00'];

function myFun(){

//adds values to Consumption avariable
consumption = parseInt(document.getElementById("consumption-input").value);

//adds values to battery capacity variable
batCapacity = parseInt(document.getElementById("battery-Cap-input").value);

// adds values to battery energy
solarGeneration = parseInt(document.getElementById("sol-Pan-Gen-input").value);

// adds values to battery energy
dayNightPercentage = parseInt(document.getElementById("day-night-perc-input").value);

//Fills the battery to its maximum capacity
batStateArray[0] = batCapacity;
consumption = consumption / 24;
//var i = 0;
for (var i = 0; i < engEfficiency.length; i++) {
    consumptionArray[i] = consumption;

    //multiplies solar generated by the effeciency of that hour
    energyProducedArray[i] = solarGeneration * engEfficiency[i];

    //Subtracts the consumption from the produced energy
    if (consumption < energyProducedArray[i]) {//If concumption can be satisfied by the produced solar energy this code will be excecuted leaving the energy needed as 0
        excessEnergy = energyProducedArray[i] - consumption;
        energyNeeded = 0;
        
    }else{
        //if the soalr produced is not enough this code will be excecuted because there will be energy left
        energyNeeded = consumption - energyProducedArray[i];
        excessEnergy = 0;
        
    }//END IF

    //Subtracts energy from the battery
    if (batStateArray[i] >= energyNeeded) {//if energy from the battery is neough to satisfy the energy needed the energy will be taken from it and electricity will be 0
        batStateArray[i] = batStateArray[i] - energyNeeded;
        electricityArray[i] = 0
        

    } else if( batStateArray[i] < energyNeeded) {//IF the battery is less than the energy thats needed we will then take all thats in the battery and whats left will be taken from the electricity
        energyNeeded = energyNeeded - batStateArray[i];
        electricityArray[i] = energyNeeded;
        batStateArray[i] = 0;
        
    }//END IF

    //Adds the excess produced energy to the battery
    batStateArray[i+1] = batStateArray[i] + excessEnergy;

    //Checks if the battery is above its capacity then if so it fills it to its capacity (menaing it exceeded its capcacity )
    if (batStateArray[i+1] > batCapacity) {
        batStateArray[i+1] = batCapacity;
        
    }//END IF
}//END of loop

//Calculates the amount of energy needed
for (let i = 0; i < electricityArray.length; i++) {
  totEngNeeded += electricityArray[i];
  
}
document.getElementById("results").innerHTML = totEngNeeded + "<b>W</b>";

//Dispalys the energy used during the night or day
dayNightPercentage = (dayNightPercentage / 100);
document.getElementById("cons-perc").innerHTML = totEngNeeded * dayNightPercentage  + "<b>W</b>";

//Chart 

var mySummerChart = document.getElementById('mySummerChart').getContext('2d');

    var engChart = new Chart(mySummerChart, {
      type: 'bar',
      data:{
        labels: xAxisArr, //X Axis
        datasets:[{ //This is the bar graphs code
          label: 'Battery charge',
          data: batStateArray, //array for energy Production data
          backgroundColor: 'rgba(58, 58, 58, 0.5)',
          borderWidth: 4,
          borderColor: 'rgba(1, 1, 1, 0.2)',
      },
      { //This is the line graphs code
        label: 'Consumption',
        data: consumptionArray ,
        fill: false,
        borderWidth: 4,
        borderColor: 'red',
        type: 'line'
      },
      { //This is the bar graaph code
        label: 'Solar generation',
        data: energyProducedArray,
        fill : false,
        borderWidth: 4,
        borderColor: 'green',
        type: 'line'
      },
      { //Eskom line graph
        label: 'Electricity units',
        data: electricityArray, //array
       
        borderWidth: 3,
        borderColor: 'blue',
        backgroundColor: 'blue',
        type: 'bar'
      }]
    }, //configuration of the graph
      options:{
        title:{
          display: true,
          text: 'Basic Summer solar calculation',
          fontSize: 25
        },
        legend:{
          position:'right'
        },// stack the graphs ontop of each other
        scales:{
          yAxes:[{
            ticks:{beginAtZero: true},
            stacked: false,
          }],
          xAxes:[{
            stacked: true
          }]
        }
      }
    });


}//END of myFun functiion

//Winter graph

function myFun1(){


for (var i = 0; i < engEfficiency.length; i++) {
  //resets the arrays for winter calculations
  batStateArray[i] = 0;
  energyProducedArray[i] = 0;
  electricityArray[i] = 0;

}//END of loop

//resets calculated values for winter calculations
 excessEnergy = 0;
 energyNeeded = 0;
 totEngNeeded = 0;

 //divides the production by 50 perecent
 solarGeneration = solarGeneration * 0.5;

 //Fills the battery to its maximum capacity
batStateArray[0] = batCapacity;


for (let i = 0; i < engEfficiency.length; i++) {
 
  //multiplies solar generated by the effeciency of that hour
  energyProducedArray[i] = solarGeneration * engEfficiency[i];

  //Subtracts the consumption from the produced energy
  if (consumption < energyProducedArray[i]) {//If concumption can be satisfied by the produced solar energy this code will be excecuted leaving the energy needed as 0
      excessEnergy = energyProducedArray[i] - consumption;
      energyNeeded = 0;
      
  }else{
      //if the soalr produced is not enough this code will be excecuted because there will be energy left
      energyNeeded = consumption - energyProducedArray[i];
      excessEnergy = 0;
      
  }//END IF

  //Subtracts energy from the battery
  if (batStateArray[i] >= energyNeeded) {//if energy from the battery is neough to satisfy the energy needed the energy will be taken from it and electricity will be 0
      batStateArray[i] = batStateArray[i] - energyNeeded;
      electricityArray[i] = 0
      

  } else if( batStateArray[i] < energyNeeded) {//IF the battery is less than the energy thats needed we will then take all thats in the battery and whats left will be taken from the electricity
      energyNeeded = energyNeeded - batStateArray[i];
      electricityArray[i] = energyNeeded;
      batStateArray[i] = 0;
      
  }//END IF

  //Adds the excess produced energy to the battery
  batStateArray[i+1] = batStateArray[i] + excessEnergy;

  //Checks if the battery is above its capacity then if so it fills it to its capacity (menaing it exceeded its capcacity )
  if (batStateArray[i+1] > batCapacity) {
      batStateArray[i+1] = batCapacity;
      
  }//END IF
  
}

//Calculates the amount of energy needed
for (let i = 0; i < electricityArray.length; i++) {
  totEngNeeded += electricityArray[i];
}
document.getElementById("results1").innerHTML = totEngNeeded + "<b>W</b>";

//Dispalys the energy used during the night or day
document.getElementById("cons-perc-w").innerHTML = totEngNeeded * dayNightPercentage  + "<b>W</b>";
//Chart 

var myWinterChart = document.getElementById('myWinterChart').getContext('2d');

    var engChart = new Chart(myWinterChart, {
      type: 'bar',
      data:{
        labels: xAxisArr, //X Axis
        datasets:[{ //This is the bar graphs code
          label: 'Battery charge',
          data: batStateArray, //array for energy Production data
          backgroundColor: 'rgba(58, 58, 58, 0.5)',
          borderWidth: 4,
          borderColor: 'rgba(1, 1, 1, 0.2)',
      },
      { //This is the line graphs code
        label: 'Consumption',
        data: consumptionArray ,
        fill: false,
        borderWidth: 4,
        borderColor: 'red',
        type: 'line'
      },
      { //This is the bar graaph code
        label: 'Solar generation',
        data: energyProducedArray,
        fill : false,
        borderWidth: 4,
        borderColor: 'green',
        type: 'line'
      },
      { //Eskom line graph
        label: 'Electricity units',
        data: electricityArray, //array
       
        borderWidth: 3,
        borderColor: 'blue',
        backgroundColor: 'blue',
        type: 'bar'
      }]
    }, //configuration of the graph
      options:{
        title:{
          display: true,
          text: 'Basic winter solar calculation',
          fontSize: 25
        },
        legend:{
          position:'right'
        },// stack the graphs ontop of each other
        scales:{
          yAxes:[{
            ticks:{beginAtZero: true},
            stacked: false,
          }],
          xAxes:[{
            stacked: true
          }]
        }
      }
    });



}